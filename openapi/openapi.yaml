openapi: 3.0.0
paths:
  /status:
    get:
      operationId: getStatus
      parameters: []
      responses:
        '200':
          description: API is up and running.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      summary: Get the status of the API.
      tags:
        - Status
  /oauth/token:
    post:
      operationId: authorizeToken
      parameters: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuthTokenRequestDto'
      responses:
        '200':
          description: Successful authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthTokenResponse'
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: Invalid authorization code or client credentials.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      summary: >-
        Exchange authorization code for access token. Or refresh an existing
        access token.
      tags:
        - OAuth
  /oauth/authorize:
    get:
      operationId: startOAuthFlow
      parameters:
        - name: response_type
          required: true
          in: query
          description: Must be 'code'
          schema:
            enum:
              - code
            type: string
        - name: client_id
          required: true
          in: query
          description: The client ID of the application
          schema:
            type: string
        - name: redirect_uri
          required: true
          in: query
          description: The redirect URI to return to after authorization
          schema:
            type: string
        - name: scope
          required: false
          in: query
          description: Space-delimited list of scopes being requested
          schema:
            type: string
        - name: state
          required: false
          in: query
          description: Random string for CSRF protection and client state tracking
          schema:
            type: string
        - name: Location
          in: header
          description: The location of the redirect URI
          schema:
            type: string
      responses:
        '302':
          description: Redirect to the frontend consent page
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      summary: Begin OAuth2 authorization code flow
      tags:
        - OAuth
  /v0/organization:
    get:
      operationId: organization_getOrganization
      parameters: []
      responses:
        '200':
          description: The organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '404':
          description: The organization was not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      security:
        - oauth:
            - user-account
      summary: Get information about the organization
      tags:
        - Organizations v0
  /v0/warehouses:
    get:
      operationId: getWarehouses
      parameters:
        - name: take
          required: false
          in: query
          description: Number of items to take
          schema:
            example: 10
            type: number
        - name: skip
          required: false
          in: query
          description: Number of items to skip
          schema:
            example: 0
            type: number
      responses:
        '200':
          description: List of warehouses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      security:
        - oauth:
            - locations
      summary: Get the list of warehouses.
      tags:
        - Warehouses v0
  /v0/inventory/cartons/breakdown:
    get:
      operationId: getInventoryCartonBreakdown
      parameters:
        - name: skip
          required: false
          in: query
          description: Number of items to skip
          schema:
            example: 0
            type: number
        - name: take
          required: false
          in: query
          description: Number of items to take
          schema:
            example: 10
            type: number
        - name: updatedSince
          required: false
          in: query
          description: Return only items updated since this date
          schema:
            format: date-time
            example: '2025-01-01T00:00:00.000Z'
            type: string
      responses:
        '200':
          description: The inventory breakdown
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCartonBreakdownDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      security:
        - oauth:
            - inventory
      summary: Get the inventory breakdown by cartons and provide their contents
      tags:
        - Inventory v0
  /v0/inventory/products/breakdown:
    get:
      operationId: getInventoryProductBreakdown
      parameters:
        - name: skip
          required: false
          in: query
          description: Number of items to skip
          schema:
            example: 0
            type: number
        - name: take
          required: false
          in: query
          description: Number of items to take
          schema:
            example: 10
            type: number
        - name: updatedSince
          required: false
          in: query
          description: Return only items updated since this date
          schema:
            format: date-time
            example: '2025-01-01T00:00:00.000Z'
            type: string
      responses:
        '200':
          description: The inventory breakdown
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryProductBreakdownDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      security:
        - oauth:
            - inventory
      summary: Get the inventory breakdown by products
      tags:
        - Inventory v0
info:
  title: 3PLGUYS Public API
  description: Warehouse Management Public API (Beta)
  version: v0
  contact: {}
tags: []
servers:
  - url: https://api.3plguys.com
    description: Production
  - url: https://sandbox.3plguys.com
    description: Sandbox
components:
  securitySchemes:
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://account.3plguys.com/auth/app-authorize
          scopes:
            user-account: Read users
            inventory: Read inventory
            orders: Read orders
            shipments: Read shipments
            organization: Read organizations
          tokenUrl: http://api.3plguys.com/oauth/token
  schemas:
    OAuthTokenRequestDto:
      type: object
      properties:
        grant_type:
          type: string
          enum:
            - authorization_code
            - refresh_token
          description: The type of grant being requested
        code:
          type: string
          description: The authorization code to exchange for an access token
        refresh_token:
          type: string
          description: The refresh token to use for refreshing the access token
        client_id:
          type: string
          description: The client ID of the application
        client_secret:
          type: string
          description: The client secret for the application
        redirect_uri:
          type: string
          description: The redirect URI to use for the authorization code flow
      required:
        - grant_type
        - client_id
        - client_secret
    OAuthTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Access token
        token_type:
          type: string
          description: Token type, usually Bearer
        expires_in:
          type: number
          description: Token expiration time in seconds
        refresh_token:
          type: string
          description: Refresh token
        scope:
          type: string
          description: Granted scopes (space-delimited string)
      required:
        - access_token
        - token_type
        - expires_in
        - refresh_token
        - scope
    ErrorDto:
      type: object
      properties:
        properties:
          type: object
          example:
            $field: must be a string
        error:
          type: string
          example: Something went wrong
        timestamp:
          format: date-time
          type: string
          example: '2025-05-03T21:26:01.539Z'
      required:
        - properties
        - error
        - timestamp
    OrganizationContactDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the main contact
          example: John Doe
          nullable: true
        phoneNumber:
          type: string
          description: Phone number of the main contact
          example: +1 (123) 456-7890
          nullable: true
      required:
        - name
        - phoneNumber
    OrganizationAddressDto:
      type: object
      properties:
        addressline1:
          type: string
          description: Address line 1
          example: 123 Warehouse Blvd
          nullable: true
        addressline2:
          type: string
          description: Address line 2
          example: Suite 400
          nullable: true
        zipcode:
          type: string
          description: Zip or postal code
          example: '90210'
          nullable: true
        city:
          type: string
          description: City name
          example: Los Angeles
          nullable: true
        country:
          type: string
          description: Country
          example: US
          nullable: true
        state:
          type: string
          description: State or province
          example: CA
          nullable: true
      required:
        - addressline1
        - addressline2
        - zipcode
        - city
        - country
        - state
    OrganizationDto:
      type: object
      properties:
        id:
          type: string
          description: Unique id of the organization
          example: '1'
        createdAt:
          format: date-time
          type: string
          description: Creation timestamp
          example: '2022-04-09T05:27:35.043Z'
        updatedAt:
          format: date-time
          type: string
          description: Last update timestamp
          example: '2022-04-18T11:12:29.472Z'
        name:
          type: string
          description: The name of the organization
          example: 3PLGUYS
          nullable: true
        website:
          type: string
          description: Website of the organization
          example: https://3plguys.com
          nullable: true
        contact:
          description: The contact details of the organization
          nullable: false
          allOf:
            - $ref: '#/components/schemas/OrganizationContactDto'
        address:
          description: The address of the organization
          nullable: false
          allOf:
            - $ref: '#/components/schemas/OrganizationAddressDto'
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - website
        - contact
        - address
    WarehouseAddressDto:
      type: object
      properties:
        name:
          type: string
          description: Display name of the address
          example: 3PLGuys
        line1:
          type: string
          description: Primary address line
          example: 14512 Garfield Ave Paramount, CA 90723
        line2:
          type: string
          description: Secondary address line
          example: ''
        district:
          type: string
          description: District or sub-region
          example: ''
        city:
          type: string
          description: City name
          example: Paramount
        state:
          type: string
          description: State or province
          example: CA
        countryCode:
          type: string
          description: Two-letter country code
          example: US
        postalCode:
          type: string
          description: Postal code or ZIP code
          example: '90723'
      required:
        - name
        - line1
        - line2
        - district
        - city
        - state
        - countryCode
        - postalCode
    WarehouseContactDto:
      type: object
      properties:
        name:
          type: string
          description: Contact person or company name
          example: 3PLGUYS
        email:
          type: string
          description: Contact email address
          example: info@3plguys.com
        phoneNumber:
          type: string
          description: Contact phone number
          example: (866) 373-8599
        fax:
          type: string
          description: Contact fax number
          example: ''
      required:
        - name
        - email
        - phoneNumber
        - fax
    WarehouseDto:
      type: object
      properties:
        id:
          type: number
          description: Unique warehouse ID
          example: 1
        name:
          type: string
          description: Warehouse display name
          example: 3PLGuys
        description:
          type: string
          description: Optional warehouse description
          example: null
          nullable: true
        address:
          description: Warehouse address info
          allOf:
            - $ref: '#/components/schemas/WarehouseAddressDto'
        contact:
          description: Warehouse contact info
          allOf:
            - $ref: '#/components/schemas/WarehouseContactDto'
        tags:
          description: Optional list of tags
          example: []
          type: array
          items:
            type: string
      required:
        - id
        - name
        - description
        - address
        - contact
        - tags
    InventoryCartonBreakdownDimensionsDto:
      type: object
      properties:
        length:
          type: number
          description: The length of the carton (in millimeters)
          example: 127
        width:
          type: number
          description: The width of the carton (in millimeters)
          example: 127
        height:
          type: number
          description: The height of the carton (in millimeters)
          example: 127
      required:
        - length
        - width
        - height
    InventoryCartonBreakdownContentDto:
      type: object
      properties:
        id:
          type: string
          description: Unique id of the product
          example: 1
        sku:
          type: string
          description: The SKU of the item
          example: 3PLGUYS
        name:
          type: string
          description: The name of the item
          example: 3PLGUYS
        quantity:
          type: number
          description: The quantity of the item in the carton
          example: 1
        createdAt:
          format: date-time
          type: string
          description: The date the product was created
          example: '2023-01-01T00:00:00.000Z'
        updatedAt:
          format: date-time
          type: string
          description: The date the product was last updated
          example: '2023-01-01T00:00:00.000Z'
      required:
        - id
        - sku
        - name
        - quantity
        - createdAt
        - updatedAt
    InventoryCartonBreakdownWarehouseDto:
      type: object
      properties:
        id:
          type: string
          description: Unique id of the warehouse
          example: 1
        name:
          type: string
          description: The name of the warehouse
          example: 3PLGUYS
        quantity:
          type: number
          description: The quantity of the cartons in the warehouse
          example: 1
      required:
        - id
        - name
        - quantity
    InventoryCartonBreakdownDto:
      type: object
      properties:
        id:
          type: string
          description: Unique id of the carton
          example: 1
        name:
          type: string
          description: Name of the carton
          example: 3PLGuys
        dimensions:
          description: The dimensions of the carton
          example: 12x12x12
          allOf:
            - $ref: '#/components/schemas/InventoryCartonBreakdownDimensionsDto'
        weight:
          type: number
          description: The weight of the carton (in grams)
          example: 1
        contents:
          description: The contents of the carton
          type: array
          items:
            $ref: '#/components/schemas/InventoryCartonBreakdownContentDto'
        quantity:
          type: number
          description: The total number of cartons on hand accross all warehouses
          example: 1
        warehouses:
          description: The total number of cartons on hand accross all warehouses
          type: array
          items:
            $ref: '#/components/schemas/InventoryCartonBreakdownWarehouseDto'
        createdAt:
          format: date-time
          type: string
          description: The date the carton was created
          example: '2023-01-01T00:00:00.000Z'
        updatedAt:
          format: date-time
          type: string
          description: >-
            The date the carton was last updated (does include if quantities
            changed in a warehouses)
          example: '2023-01-01T00:00:00.000Z'
      required:
        - id
        - name
        - dimensions
        - weight
        - contents
        - quantity
        - warehouses
        - createdAt
        - updatedAt
    InventoryProductBreakdownWarehouseDto:
      type: object
      properties:
        id:
          type: string
          description: Unique id of the warehouse
          example: 1
        name:
          type: string
          description: The name of the warehouse
          example: 3PLGUYS
        quantity:
          type: number
          description: The quantity of the product in the warehouse
          example: 1
      required:
        - id
        - name
        - quantity
    InventoryProductBreakdownDto:
      type: object
      properties:
        id:
          type: string
          description: Unique id of the product
          example: 1
        sku:
          type: string
          description: The SKU of the item
          example: 3PLGUYS
        name:
          type: string
          description: The name of the item
          example: 3PLGUYS
        quantity:
          type: number
          description: The quantity of product in all warehouses
          example: 1
        warehouses:
          description: Breakdown of the item by warehouse
          type: array
          items:
            $ref: '#/components/schemas/InventoryProductBreakdownWarehouseDto'
        createdAt:
          format: date-time
          type: string
          description: The date the product was created
          example: '2023-01-01T00:00:00.000Z'
        updatedAt:
          format: date-time
          type: string
          description: >-
            The date the product was last updated (does include if quantities
            changed in a warehouses)
          example: '2023-01-01T00:00:00.000Z'
      required:
        - id
        - sku
        - name
        - quantity
        - warehouses
        - createdAt
        - updatedAt
